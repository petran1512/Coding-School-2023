@page "/itemlist/details/{Id:int?}"
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Administrator")]
@inject AuthenticationStateProvider authenticationStateProvider
@using Fuel.Station.Blazor.Shared;
@using Fuel.Station.Model;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
<PageTitle>Fuel Station</PageTitle>

@if (Item == null)
{
    <div class="spinner-border text-secondary" role="status"></div>
}
else
{
    <h3>Item Details</h3>
    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Code</label>
            <input class="form-control" @bind="@Item.Code" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Description</label>
            <input class="form-control" @bind="@Item.Description" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Item Type</label>
            <input class="form-control" @bind="@Item.itemType" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Price</label>
            <input class="form-control" @bind="@Item.Price" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Cost</label>
            <input class="form-control" @bind="@Item.Cost" disabled />
        </div>
    </div>
    <div class="row mt-2">
        <div class="col">
            <div class="col">
                <BootstrapButton ButtonType="BootstrapButtonType.Secondary" OnClick="OnCancel">Back</BootstrapButton>
            </div>
        </div>

    </div>
}




@code {
    [Parameter] public int? Id { get; set; }
    ItemEditDto? Item { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Item = new();
        }
        else
        {
            Item = await httpClient.GetFromJsonAsync<ItemEditDto>($"item/{Id}");
            if (Item is null)
            {
                //TODO: Handle if item is null
            }
        }
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("itemlist");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("item", Item);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("item", Item);
        }

        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("/item");
    }
}