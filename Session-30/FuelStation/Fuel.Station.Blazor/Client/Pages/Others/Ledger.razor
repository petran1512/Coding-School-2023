@inject HttpClient httpClient
@using System.Net.Http
@inject NavigationManager navigationManager
@using System.Net.Http.Json
@using Fuel.Station.Blazor.Shared;
@inject IJSRuntime jsRuntime
@page "/ledgerlist"
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Manager")]
<PageTitle>Fuel Station</PageTitle>

@if (isLoading)
{
    <div class="spinner-border text-secondary" role="status"></div>
}
else
{

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Year</th>
                <th>Month</th>
                <th>Income</th>
                <th>Expenses</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ledger in Ledgers)
            {
                <tr>
                    <td>@ledger.Year</td>
                    <td>@ledger.Month</td>
                    <td>@ledger.Income</td>
                    <td>@ledger.Expenses</td>
                    <td>@ledger.Total</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<LedgerDto> Ledgers = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer() {
        var tempLedgers = await httpClient.GetFromJsonAsync<List<LedgerDto>>("ledgerlist");
        if (tempLedgers is not null)
        {
            Ledgers = tempLedgers;
        } else {
            // TODO: if tempLedgerList is null
        }
    }
}
