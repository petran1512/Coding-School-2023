@page "/employeelist/details/{Id:int?}"
@using Fuel.Station.Blazor.Shared;
@using Fuel.Station.Model;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Administrator")]
<PageTitle>Fuel Station</PageTitle>

@if (Employee == null)
{
    <div class="spinner-border text-secondary" role="status"></div>
}
else
{
    <h3>Employee Details</h3>
    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Name</label>
            <input class="form-control" @bind="@Employee.Name" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Surname</label>
            <input class="form-control" @bind="@Employee.Surname" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Employee Type</label>
            <input class="form-control" @bind="@Employee.employeeType" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Sallary Per Month</label>
            <input class="form-control" @bind="@Employee.SallaryPerMonth" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Hire Date Start</label>
            <input class="form-control" @bind="@Employee.HireDateStart" disabled />
        </div>
        <div class="col-md-6">
            <label class="form-label">Hire Date End</label>
            <input class="form-control" @bind="@Employee.HireDateEnd" disabled />
        </div>
    </div>
    <div class="row mt-2">
        <div class="col">
            <div class="col">
                <BootstrapButton ButtonType="BootstrapButtonType.Secondary" OnClick="OnCancel">Back</BootstrapButton>
            </div>
        </div>

    </div>
}




@code {
    [Parameter] public int? Id { get; set; }
    EmployeeEditDto? Employee { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Employee = new();
        }
        else
        {
            Employee = await httpClient.GetFromJsonAsync<EmployeeEditDto>($"employee/{Id}");
            if (Employee is null)
            {
                //TODO: Handle if employee is null
            }
        }
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("employeelist");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("employee", Employee);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("employee", Employee);
        }

        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("/employee");
    }
}
