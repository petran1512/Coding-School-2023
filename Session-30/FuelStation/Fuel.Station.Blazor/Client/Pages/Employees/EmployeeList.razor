@page "/employeelist"
@attribute [Authorize(Roles = "Administrator")]
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@inject AuthenticationStateProvider authenticationStateProvider
@using Fuel.Station.Blazor.Client.Security;
@using Fuel.Station.Blazor.Shared;
@using System.Net.Http.Json
@using System.Net.Http
@using System.Net.Http.Headers;
@using Microsoft.AspNetCore.Authorization;
@using static System.Net.WebRequestMethods;

<PageTitle>Fuel Station</PageTitle>

@if (isLoading)
{
    <div class="spinner-border text-secondary" role="status"></div>
}
else
{
    <BootstrapButton ButtonType="BootstrapButtonType.Success" OnClick="CreateItem">Create</BootstrapButton>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Employee Type</th>
                <th>Sallary Per Month</th>
                <th>Hire Start Date</th>
                <th>Hire End Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employeeList)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Surname</td>
                    <td>@employee.employeeType</td>
                    <td>@employee.SallaryPerMonth</td>
                    <td>@employee.HireDateStart</td>
                    <td>@employee.HireDateEnd</td>
                    <td>
                        <BootstrapButton ButtonType="BootstrapButtonType.Warning" OnClick="()=> EditItem(employee)">Edit</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Primary" OnClick="()=> DetailItem(employee)">Details</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Danger" OnClick="()=> DeleteItem(employee)">Delete</BootstrapButton>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<EmployeeListDto> employeeList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
    //    var customAuthStateProvider = (CustomAuthenticationStateProvider)authenticationStateProvider;
    //    var token = await customAuthStateProvider.GetToken();
    //    if (!string.IsNullOrWhiteSpace(token))
    //    {
            await LoadItemsFromServer();
            isLoading = false;
    //        //Http.DefaultRequestHeader.Authorization = new AuthenticationHeaderValue("bearer", token);
    //    }
    //    else
    //    {
    //        navigationManager.NavigateTo("/login");
    //    }
    //    ///////////////////////////////////////
    }

    private async Task LoadItemsFromServer()
    {
        var tempEmployeeList = await httpClient.GetFromJsonAsync<List<EmployeeListDto>>("employee");
        if (tempEmployeeList is not null)
        {
            employeeList = tempEmployeeList;
        }
        else
        {
            //TODO: if tempEmployeeList is null
        }
    }

    private void CreateItem()
    {
        navigationManager.NavigateTo("employeeList/edit");
    }

    private void EditItem(EmployeeListDto employee)
    {
        navigationManager.NavigateTo($"employeeList/edit/{employee.Id}");
    }

    private async Task DeleteItem(EmployeeListDto employee)
    {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm)
        {
            var response = await httpClient.DeleteAsync($"employee/{employee.Id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadItemsFromServer();
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                await jsRuntime.InvokeVoidAsync("alert", error);
            }
        }
    }

    private void DetailItem(EmployeeListDto employee)
    {
        navigationManager.NavigateTo($"employeeList/details/{employee.Id}");
    }
}
